% makeMirrorDataOutput.m*****
% Function that assembles the data matrix sent to the DAQ Analog output Engine for controlling the laser scanning mirrors
%% SYNTAX
%   finalMirrorDataOutput = makeMirrorDataOutput()
%       finalMirrorDataOutput: A Nx2 matrix containing X and Y mirror signals, following all linear transformations (i.e. zoom, rotation, shift)
%
%% NOTES
% A side effect of this function is the computation of state.acq.mirrorDataOutputOrg, which is the 'original'
%   mirror data output prior to any linear transformation (i.e. shift, rotation, zoom)
%
% This function will also rotate the mirror scanning functions if necessary.
%   
% NoLinTrans option was added so that function can be used to compute the base sawtooth waveform only--i.e. the waveform at the baseZoomFactor
%% CHANGES
%   VI091208A: Don't pass offset to makeSawtoothX/Y functions, and use (renamed) rotateAndShiftMirrorData() function -- Vijay Iyer 9/12/08
%   VI091708A: Use new makeSawtoothX/Y and makeMirrorDataX implementations, avoiding redundant calculations -- Vijay Iyer 9/12/08
%   VI092208A: Account for min zoom factor here, rather than in makeSawtoothX -- Vijay Iyer 9/22/08
%   VI092808A: Adjustments for new baseZoom & minZoom scheme. -- Vijay Iyer 9/28/08
%   VI120908A: Correctly apply new linTransformMirrorData() function (i.e. it transforms state without returning result) -- Vijay Iyer 12/09/08
%   VI010809A: Cache the msPerLine value used to make the 'original' output data -- Vijay Iyer 1/08/09
%   VI010809B: Compute waveform based on baseZoomFactor, when applicable -- Vijay Iyer 1/08/09
%   VI011309A: Use rounding to avoid numerical error -- Vijay Iyer 1/13/09
%   VI012109A: msPerLine is now actually in milliseconds -- Vijay Iyer 1/21/09s
%   VI012509A: Cache the servoDelay value used to make the output data -- Vijay Iyer 1/25/09
%   VI013109A: Also cache the acqDelay value used to make the output data -- Vijay Iyer 1/31/09
%   VI013109B: Remove differential scaling for above/below base zoom factor -- Vijay Iyer 1/31/09
%
%% CREDITS
% Written By: Thomas Pologruto
% Cold Spring Harbor Labs
% February 9, 2001
%% ***********************************

function finalMirrorDataOutput = makeMirrorDataOutput(varargin)
global state 

updateZoom; %VI092808A: This ensures FF/line period are correctly specified for the current zoom

ActualRateOutput2 = get(state.init.ao2, 'SampleRate');
samplesPerLine = round(ActualRateOutput2 * state.acq.msPerLine * 1e-3);  %VI011309A: Will be integer-valued naturally, but this ensures no numerical error %VI012109A
%%%%VI092808A: Not needed anymore
% rotate=state.acq.scanRotation;
% zoom=state.acq.zoomFactor;
% 
% state.acq.scanRotation=0;
% state.acq.zoomFactor=state.acq.baseZoomFactor;
% updateGUIByGlobal('state.acq.scanRotation');
% updateGUIByGlobal('state.acq.zoomFactor');
%%%%%%%%%%%%%%%%

scanAmplitudeX  = state.acq.scanAmplitudeX; %VI013109B
scanAmplitudeY  = state.acq.scanAmplitudeY; %VI013109B
%%%VI010809A/VI013109B%%%%%%%%%%
% if state.acq.zoomFactor >= state.acq.baseZoomFactor
%     scanAmplitudeX  = state.acq.scanAmplitudeX / state.acq.baseZoomFactor;
%     scanAmplitudeY  = state.acq.scanAmplitudeY / state.acq.baseZoomFactor;
% else
%     scanAmplitudeX  = state.acq.scanAmplitudeX / state.acq.zoomFactor;
%     scanAmplitudeY  = state.acq.scanAmplitudeY / state.acq.zoomFactor;
% end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


if state.acq.fastScanningX == 1 % state.acq.fastScanningY == 0; X is the high frequency mirror (Normal operation)
	
	x = makeSawtoothX(linspace(0,state.acq.msPerLine * 1e-3,samplesPerLine), 0, scanAmplitudeX); %VI091208A, VI091708A, VI010809A, VI012109A
	x = makeMirrorDataX(x); %VI091708A

	y = makeSawtoothY(linspace(0,(state.acq.linesPerFrame * state.acq.msPerLine * 1e-3), ... %VI012109A
		(samplesPerLine * state.acq.linesPerFrame)), 0, scanAmplitudeY); %VI091208A, VI010809A
	%y = makeMirrorDataY(y1,y2); %VI091708A
	
	finalMirrorDataOutput = [x y]; 										% Defines the data matrix sent to the mirrors

elseif state.acq.fastScanningY == 1 % % state.acq.fastScanningX == 0; Y is the high frequency mirror (Normal operation)
	
	y = makeSawtoothX(linspace(0,state.acq.msPerLine * 1e-3,samplesPerLine), 0, scanAmplitudeY); %VI091208A, VI091708A, VI010809A, VI012109A
	y = makeMirrorDataX(y); %VI091708A
	
	x = makeSawtoothY(linspace(0,(state.acq.linesPerFrame * 1e-3 * state.acq.msPerLine), ... %VI012109A
		(samplesPerLine *state.acq.linesPerFrame)), 0, scanAmplitudeX); %VI091208A, VI091708A, VI010809A
	%x = makeMirrorDataY(x1,x2); %VI091708A
	
	finalMirrorDataOutput = [x y]; 										% Defines the data matrix sent to the mirrors
end

state.acq.mirrorDataOutputOrg = finalMirrorDataOutput; % original data for zooming purposes...
state.internal.mirrorDataOutputMsPerLine = state.acq.msPerLine; %Cache msPerLine value used to make this output waveform (VI010809A)
state.internal.mirrorDataOutputScanDelay = state.acq.scanDelay; %Cache scanDelay value used to make this output waveform (VI012509A)
state.internal.mirrorDataOutputAcqDelay = state.acq.acqDelay; %Cache acqDelay value used to make this output waveform (VI013109A)
%%%Not needed anymore (VI092808A)
% state.acq.scanRotation=rotate;
% state.acq.zoomFactor=zoom;
% updateGUIByGlobal('state.acq.scanRotation');
% updateGUIByGlobal('state.acq.zoomFactor');
%%%%%%%%%%%%

%%%%VI092808A: Handled in updateZoom() now 
% %VI092208A: Handle min zoom factor
% if state.acq.zoomFactor < state.internal.minZoomFactor %VI092108A
%     state.acq.zoomFactor = state.internal.minZoomFactor;
%     updateZoomStrings;
%     beep;
%     fprintf(2,'WARNING: Requested scan exceeded servo flyback rate maximum. Zoom factor was increased. Consider reducing scan amplitude or fill fraction.\n');
%     setStatusString('Adjusted Zoom!');
% end
% %%%%%%%%%%%%%%%%

%state.acq.mirrorDataOutput = rotateAndShiftMirrorData(1/state.acq.zoomFactor*state.acq.mirrorDataOutputOrg); %VI091208A
%state.acq.mirrorDataOutput = linTransformMirrorData; %VI092808A, VI120908A
linTransformMirrorData(); %VI120908A
finalMirrorDataOutput=state.acq.mirrorDataOutput; 

end
